
demo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000102  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000a74  00000000  00000000  00000158  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000007c5  00000000  00000000  00000bcc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4c 00 	jmp	0x98	; 0x98 <__ctors_end>
   4:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
   8:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
   c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  10:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  14:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  18:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  1c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  20:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  24:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  28:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  2c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  30:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  34:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  38:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  3c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  40:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  44:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  48:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  4c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  50:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  54:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  58:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  5c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  60:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  64:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  68:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  6c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  70:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  74:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  78:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  7c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  80:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  84:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  88:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  8c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  90:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  94:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d2 e0       	ldi	r29, 0x02	; 2
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61
  a4:	0e 94 58 00 	call	0xb0	; 0xb0 <main>
  a8:	0c 94 7f 00 	jmp	0xfe	; 0xfe <_exit>

000000ac <__bad_interrupt>:
  ac:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b0 <main>:
#include <avr/io.h>
#include <util/delay.h>

int main (void)
{
	DDRB |= 0xF0;
  b0:	84 b1       	in	r24, 0x04	; 4
  b2:	80 6f       	ori	r24, 0xF0	; 240
  b4:	84 b9       	out	0x04, r24	; 4
	DDRC |= 0xF0;
  b6:	87 b1       	in	r24, 0x07	; 7
  b8:	80 6f       	ori	r24, 0xF0	; 240
  ba:	87 b9       	out	0x07, r24	; 7

	while (1) {
		PORTB |= 0xF0;
  bc:	85 b1       	in	r24, 0x05	; 5
  be:	80 6f       	ori	r24, 0xF0	; 240
  c0:	85 b9       	out	0x05, r24	; 5
		PORTC |= 0XF0;
  c2:	88 b1       	in	r24, 0x08	; 8
  c4:	80 6f       	ori	r24, 0xF0	; 240
  c6:	88 b9       	out	0x08, r24	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c8:	8a ea       	ldi	r24, 0xAA	; 170
  ca:	96 ee       	ldi	r25, 0xE6	; 230
  cc:	a6 e9       	ldi	r26, 0x96	; 150
  ce:	b1 e0       	ldi	r27, 0x01	; 1
  d0:	81 50       	subi	r24, 0x01	; 1
  d2:	90 40       	sbci	r25, 0x00	; 0
  d4:	a0 40       	sbci	r26, 0x00	; 0
  d6:	b0 40       	sbci	r27, 0x00	; 0
  d8:	d9 f7       	brne	.-10     	; 0xd0 <main+0x20>
  da:	00 00       	nop
		_delay_ms(10000);

		PORTB &= 0x0F;
  dc:	85 b1       	in	r24, 0x05	; 5
  de:	8f 70       	andi	r24, 0x0F	; 15
  e0:	85 b9       	out	0x05, r24	; 5
		PORTC &= 0x0F;
  e2:	88 b1       	in	r24, 0x08	; 8
  e4:	8f 70       	andi	r24, 0x0F	; 15
  e6:	88 b9       	out	0x08, r24	; 8
  e8:	8a ea       	ldi	r24, 0xAA	; 170
  ea:	96 ee       	ldi	r25, 0xE6	; 230
  ec:	a6 e9       	ldi	r26, 0x96	; 150
  ee:	b1 e0       	ldi	r27, 0x01	; 1
  f0:	81 50       	subi	r24, 0x01	; 1
  f2:	90 40       	sbci	r25, 0x00	; 0
  f4:	a0 40       	sbci	r26, 0x00	; 0
  f6:	b0 40       	sbci	r27, 0x00	; 0
  f8:	d9 f7       	brne	.-10     	; 0xf0 <main+0x40>
  fa:	00 00       	nop
  fc:	df cf       	rjmp	.-66     	; 0xbc <main+0xc>

000000fe <_exit>:
  fe:	f8 94       	cli

00000100 <__stop_program>:
 100:	ff cf       	rjmp	.-2      	; 0x100 <__stop_program>
